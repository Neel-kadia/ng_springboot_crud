import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class NgConfirmService {
    constructor() {
        this.displayModa$ = new Subject();
    }
    showConfirm(message, yes, no) {
        this.displayModa$.next({
            isVisible: true,
            messageText: message,
            yes: () => {
                yes();
                this.closeConfirm();
            },
            no: () => {
                no();
                this.closeConfirm();
            },
        });
    }
    closeConfirm() {
        this.displayModa$.next(false);
    }
}
NgConfirmService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.1", ngImport: i0, type: NgConfirmService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NgConfirmService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.1", ngImport: i0, type: NgConfirmService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.1", ngImport: i0, type: NgConfirmService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY29uZmlybS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctY29uZmlybS9zcmMvbGliL25nLWNvbmZpcm0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBSy9CLE1BQU0sT0FBTyxnQkFBZ0I7SUFJM0I7UUFGQSxpQkFBWSxHQUFHLElBQUksT0FBTyxFQUFPLENBQUM7SUFFbkIsQ0FBQztJQUVoQixXQUFXLENBQUMsT0FBZSxFQUFFLEdBQWUsRUFBRSxFQUFjO1FBQzFELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO1lBQ3JCLFNBQVMsRUFBRSxJQUFJO1lBQ2YsV0FBVyxFQUFFLE9BQU87WUFDcEIsR0FBRyxFQUFFLEdBQUcsRUFBRTtnQkFDUixHQUFHLEVBQUUsQ0FBQztnQkFDTixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDdEIsQ0FBQztZQUNELEVBQUUsRUFBRSxHQUFHLEVBQUU7Z0JBQ1AsRUFBRSxFQUFFLENBQUM7Z0JBQ0wsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3RCLENBQUM7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0QsWUFBWTtRQUNWLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7OzZHQXRCVSxnQkFBZ0I7aUhBQWhCLGdCQUFnQixjQUZmLE1BQU07MkZBRVAsZ0JBQWdCO2tCQUg1QixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmdDb25maXJtU2VydmljZSB7XG5cbiAgZGlzcGxheU1vZGEkID0gbmV3IFN1YmplY3Q8YW55PigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBzaG93Q29uZmlybShtZXNzYWdlOiBzdHJpbmcsIHllczogKCkgPT4gdm9pZCwgbm86ICgpID0+IHZvaWQpIHtcbiAgICB0aGlzLmRpc3BsYXlNb2RhJC5uZXh0KHtcbiAgICAgIGlzVmlzaWJsZTogdHJ1ZSxcbiAgICAgIG1lc3NhZ2VUZXh0OiBtZXNzYWdlLFxuICAgICAgeWVzOiAoKSA9PiB7XG4gICAgICAgIHllcygpO1xuICAgICAgICB0aGlzLmNsb3NlQ29uZmlybSgpO1xuICAgICAgfSxcbiAgICAgIG5vOiAoKSA9PiB7XG4gICAgICAgIG5vKCk7XG4gICAgICAgIHRoaXMuY2xvc2VDb25maXJtKCk7XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG4gIGNsb3NlQ29uZmlybSgpIHtcbiAgICB0aGlzLmRpc3BsYXlNb2RhJC5uZXh0KGZhbHNlKTtcbiAgfVxufVxuIl19